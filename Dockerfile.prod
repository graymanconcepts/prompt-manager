# Stage 1: Build frontend
FROM node:20-alpine AS frontend-builder

WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm ci

# Copy source files
COPY . .

# Build frontend
RUN npm run build

# Stage 2: Build backend
FROM node:20-alpine AS backend-builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY --from=frontend-builder /app/dist ./dist

# Install production dependencies only
RUN npm ci --only=production

# Copy backend source
COPY server ./server

# Stage 3: Production
FROM node:20-alpine AS production

# Install security updates and basic tools
RUN apk update && \
    apk upgrade && \
    apk add --no-cache sqlite dumb-init && \
    rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -S appgroup && \
    adduser -S appuser -G appgroup

# Set working directory
WORKDIR /app

# Copy built assets from previous stages
COPY --from=frontend-builder /app/dist ./dist
COPY --from=backend-builder /app/node_modules ./node_modules
COPY --from=backend-builder /app/server ./server
COPY package*.json ./

# Create and set permissions for data directory
RUN mkdir -p /app/data && \
    chown -R appuser:appgroup /app

# Set environment variables
ENV NODE_ENV=production \
    PORT=3001 \
    DB_PATH=/app/data

# Switch to non-root user
USER appuser

# Expose ports
EXPOSE 3001

# Volume for database
VOLUME ["/app/data"]

# Use dumb-init as PID 1
ENTRYPOINT ["/usr/bin/dumb-init", "--"]

# Start the application
CMD ["npm", "run", "server:prod"]
